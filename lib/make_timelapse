#!/bin/bash
__scriptVersion=1.0
__scriptPID=$$
__scriptPath="$(cd "$(dirname "$0")"; pwd -P )"
__scriptFile="$(basename "$0")"

# Function ===================================================================== 
#           Name:  make_timelapse
#         Author:  Rusty Gibbs 
#       Homepage:  http://www.wickedidol.com
#            Git:  https://github.com/fenchurch/TimeLapse.git
#        Created:  2019-02-02
#       Modified:  2019-02-08
# ==============================================================================
usage="usage:
    $__scriptFile arguments <input>"
# default vars =============================================================={{{

# ===========================================================================}}}
source "$__scriptPath/defaults"
source "$__scriptPath/../conf"

log="$__scriptPath/_log"
tmp="$__scriptPath/../${TMP_PATH}"

find_daterange(){
    if [[ $start =~ ([0-9]{1,2})/([0-9]{1,2})/([0-9]{2,4}) ]]; then
        [[ ${#BASH_REMATCH[1]} == 1 ]] && m=0${BASH_REMATCH[1]}
        [[ ${#BASH_REMATCH[2]} == 1 ]] && d=0${BASH_REMATCH[2]}
        [[ ${#BASH_REMATCH[3]} == 1 ]] && y=0${BASH_REMATCH[3]}
        touch -t ${y}${m}${d}0000 start
    fi
    if [[ $end =~ ([0-9]{1,2}/[0-9]{1,2}/[0-9]{2,4}) ]]; then
        [[ ${#BASH_REMATCH[1]} == 1 ]] && m=0${BASH_REMATCH[1]}
        [[ ${#BASH_REMATCH[2]} == 1 ]] && d=0${BASH_REMATCH[2]}
        [[ ${#BASH_REMATCH[3]} == 1 ]] && y=0${BASH_REMATCH[3]}
        touch -t ${y}${m}${d}2359 end
        end_find="! -newer end "
    fi
    find $(realpath "$__scriptPath/../$STILLS_PATH") -type f -name "$@*" \
        -newer start $end_find -exec echo {} ";" | sort
    

}

main(){
    #copy the images from the date range to the tmp directory
    start=${start:-$( [[ `uname` == Darwin ]] && date -v-1d +%m/%d/%Y || date +%m/%d/%Y -d "yesterday")};
    #make the video 
    for f in $( $__scriptPath/date_range $start $end); do
        mv "$f" "$tmp"
    done

    output="${1:-$__scriptPath/../$VIDEOS_PATH}/timelapse ${start//\//-}"
    if [ -n "$end" ]; then
        output+=" to ${end//\//-}"
    else
        output+=" to $(date +%m-%d-%Y)"
    fi
    output+=.mp4
    #create the timelapse from the images we just moved to tmp
    ffmpeg -hide_banner\
        -framerate ${framerate:-30}\
        -pattern_type glob -i "$tmp/*.jpg"\
        -c:v libx264\
        -r 30\
        -pix_fmt yuv420p\
        "$output"

    echo "$output"

    mv "$tmp"/* "$__scriptPath/../${STILLS_PATH}"
}

while true; do
    case "$1" in
    --help      | -h ) usage; exit 0;;
    --version   | -V ) echo "$__scriptFile -- Version $__scriptVersion"; exit 0;;
    --start_date| -s ) start="$2"; shift 2;;
    --end_date  | -e ) end="$2"; shift 2;;
    --framerate | -f ) framerate="$2"; shift 2;;
    * ) break;;
    esac
done
if [[ -t 0 && $# -eq 0 ]]; then
    main
    exit 0
fi
echo "${@:-$(</dev/stdin)}" | while read line; do
    main "$line"
done
