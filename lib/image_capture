#!/bin/bash
__scriptVersion=1.0
__scriptPID=$$
__scriptPath="$(cd "$(dirname "$0")"; pwd -P )"
__scriptFile="$(basename "$0")"

# Function ===================================================================== 
#           Name:  image_capture
#         Author:  Rusty Gibbs 
#       Homepage:  http://www.wickedidol.com
#            Git:  https://github.com/fenchurch/TimeLapse.git
#        Created:  2019-02-02
#       Modified:  2019-02-05
# ==============================================================================
usage="usage:
    $__scriptFile"
# default vars =============================================================={{{
log="$__scriptPath/_log"
# ===========================================================================}}}
check_dependencies(){
  if ! which ffmpeg 1>&-; then
    echo "missing dependency: ffmpeg\nPlease install and try again"
    exit 1
  elif [ ! -e "$__scriptPath/../conf" ]; then
    echo "Missing configuration file: ../conf"
    exit 2
  fi
}
main(){
    check_dependencies
    #Get Conf Variables
    #
    url="$1"
    hostname="$( sed -e 's/^\(http:\/\/\)//' -e 's/.*@//' -e 's/\(\w*\)\/.*/\1/' <<< "$1" )"
    #Output Filename to stdout
    output="$(realpath "${storage_path:-$__scriptPath/../$STILLS_PATH}")"
    output+="/$hostname - $(date +%s).jpg"

    #Get a single image from the camera
    echo "Capturing Image from $hostname" 1>&2 
    $log `ffmpeg -y -i "$url" -vframes 1 -hide_banner "$output" 2>&1`
    echo $output
}
source "$__scriptPath/defaults"
source "$__scriptPath/../conf"

while true; do
    case "$1" in
    --help      | -h ) echo "$usage"; exit 0;;
    --version   | -V ) echo "$__scriptFile -- Version $__scriptVersion"; exit 0;;
    --path   | -p ) storage_path="$1"; shift 1;;
    * ) break;;
    esac
done
if [[ -t 0 && $# -eq 0 ]]; then
    if declare -p CAMERA_URL 2> /dev/null | grep -q '^declare \-a'; then
        c=0
        while [ $c -lt ${#CAMERA_URL[@]} ]; do
            main "${CAMERA_URL[$c]}"
            (( c++ ))
        done
    else
        main "${CAMERA_URL}"
    fi
    exit
fi
echo "${@:-$(</dev/stdin)}" | while read line; do
    main "$line"
done
